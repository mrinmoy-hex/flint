# Auto generated by: tools/generate_ast.py
# Do not modify this file manually.

class Stmt:
    def accept(self, visitor):
        raise NotImplementedError()

class StmtVisitor:
    def visit_block(self, block):
        raise NotImplementedError()

    def visit_expression(self, expression):
        raise NotImplementedError()

    def visit_function(self, function):
        raise NotImplementedError()

    def visit_if_stmt(self, if_stmt):
        raise NotImplementedError()

    def visit_print(self, print):
        raise NotImplementedError()

    def visit_return_stmt(self, return_stmt):
        raise NotImplementedError()

    def visit_var(self, var):
        raise NotImplementedError()

    def visit_while_stmt(self, while_stmt):
        raise NotImplementedError()

class Block(Stmt):
    def __init__(self, statements):
        self.statements = statements

    def accept(self, visitor):
        return visitor.visit_block(self)

class Expression(Stmt):
    def __init__(self, expression):
        self.expression = expression

    def accept(self, visitor):
        return visitor.visit_expression(self)

class Function(Stmt):
    def __init__(self, name, params, body):
        self.name = name
        self.params = params
        self.body = body

    def accept(self, visitor):
        return visitor.visit_function(self)

class If_stmt(Stmt):
    def __init__(self, condition, then_branch, else_branch):
        self.condition = condition
        self.then_branch = then_branch
        self.else_branch = else_branch

    def accept(self, visitor):
        return visitor.visit_if_stmt(self)

class Print(Stmt):
    def __init__(self, expression):
        self.expression = expression

    def accept(self, visitor):
        return visitor.visit_print(self)

class Return_stmt(Stmt):
    def __init__(self, keyword, value):
        self.keyword = keyword
        self.value = value

    def accept(self, visitor):
        return visitor.visit_return_stmt(self)

class Var(Stmt):
    def __init__(self, name, initializer):
        self.name = name
        self.initializer = initializer

    def accept(self, visitor):
        return visitor.visit_var(self)

class While_stmt(Stmt):
    def __init__(self, condition, body):
        self.condition = condition
        self.body = body

    def accept(self, visitor):
        return visitor.visit_while_stmt(self)

